package main

// 包的调用

import (
	"fmt"
	//"golang/src/go_code/basic_study/utils" // 这个位置只是引入包文件的路径
	// 给包起别名的方式: 别名 包路径
	// 注意： 起的别名不需要用双引号引起来，但是包路径依然要使用双引号引起来
	// 一旦给包起了别名，后续调用包的函数和变量时，都必须使用包别名调用，之前的包名不可再使用
	util "golang/src/go_code/basic_study/utils"
)

func main() {
	// 说明：go 的每一个文件都是属于一个包的，也就是说go 是以包的形式管理文件和项目目录结构的
	// 包的三大作用：
	// 1.区分同名字的函数、变量等标识符
	// 2.当程序文件很多时，可以很好的管理项目
	// 3.控制函数、变量等访问范围，即作用域
	// 打包方式： package 包名
	// 导包方式：import "包路径"
	var num = 10
	fmt.Printf("num:%v", num)
	result := util.Calculate(num) // 调用包中的函数方式是： 包名.包中的函数名
	fmt.Printf("result:%v", result)

	// 包使用的注意事项和细节：
	// 1.在给一个文件打包时，该包对应一个文件夹，比如这里的utils 文件夹对应的包名就是utils,文件的包名通常和文件所在的文件夹名保持一致，一般为小写字母
	// 2. 当一个文件要使用其他包函数或变量时，要先引入对应的包
	// 引入方式1. import "包名"； 方式2： import ("包名")
	// 3. package 指令要在文件第一行，然后再是 import 指令
	// 4. 在同一包下，不能有相同的函数名，也不能有相同的全局变量名，否则就会报重复定义的错

	// 调用utils 包中的变量，调用方式为 包名.变量名
	fmt.Printf("utils 包中的变量Num值为:%v", util.Number) // 调用方式为 包名.变量名

}
