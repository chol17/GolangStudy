变量的数据类型
每一种数据都定义了明确的数据类型，在内存中分配了不同大小的内存空间
数据类型：
1.基本数据类型{
    数值型：整数类型（int, int8, int16, int32, int64
                    uint, uint8, uint16, uint32, uint64, byte）
              // int 表示有符号整型；uint 表示无符号整型，int类型申明的数据范围和操作系统有关，32位操作系统4字节，64位系统8字节
              // byte 表示无符号的int8, 范围为 0~255   1byte = 8 bit  【bit:计算机中的最小存储单位, byte:计算机中基本存储单元】
              // rune 表示有符号的int32 表示一个unicode 码，用来处理带中文的字符串
           浮点类型（float32, float64） 
               // 浮点数 = 符号位 + 指数 + 尾数位  尾数位可能丢失导致精度不准
               // float32: 4字节有符号小数；float64: 8字节有符号小数
               // 浮点数默认是float64 类型， 且浮点类型有固定的范围和字段长度，不受OS(操作系统)的影响
    字符型：没有专门的字符型，使用byte 来保存单个字母字符
    布尔型（bool）
    字符串（string）: 官方将string 归属到基本数据类型

 2. 派生/复杂数据类型：
    指针（pointer）
    数组
    结构体（struct）：类似class 类
    管道（channel）： 高并发使用
    函数（也是一种类型）
    切片（slice）
    接口（interface）
    map： 类似java集合
}


值类型和引用类型：
值类型：基本数据类型 int系列，float系列，bool,string,数组，结构体
值类型变量直接存储值，内存通常在栈中分配



引用类型：指针，切片（slice）,map，管道(chan), 接口（interface）
引用类型变量存储的是一个地址，这个地址对应的空间才是真正存储数据值的，内存通常在堆上分配，当没有任何变量引用这个地址时，该地址对应的数据空间就成为一个垃圾，由GC 回收

















